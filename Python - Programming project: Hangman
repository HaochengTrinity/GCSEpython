#hangman

#importing random to get random words
import random as r



#making hangman a function
def hangman():
    #the frames to display:

    frame1 = """
    +---+
    |   |  
    |    
    |
    |
    |
    """

    frame2 = """
    +---+
    |   |  
    |   O 
    |
    |
    |
    """

    frame3 = """
    +---+
    |   |  
    |   O 
    |   | 
    |
    |
    """

    frame4 = """
    +---+
    |   |  
    |   O 
    |  /| 
    |
    |
    """

    frame5 = """
    +---+
    |   |  
    |   O 
    |  /|\\
    |   
    |
    """

    frame6 = """
    +---+
    |   |  
    |   O 
    |  /|\\ 
    |  /
    |
    """

    frame7 = """
    +---+
    |   |  
    |   O 
    |  /|\\
    |  / \\ 
    |
    """

    
    #assigning a variable for if you will play again
    again = "y"
    
    #assigning variables to keep track of wins and losses
    wins = 0
    losses = 0

    while again == "y":
      #choosing a random word from the list
      w = r.choice(words)
      w = w.lower()
      
      #changing the word to a list
      word = list(w)
      
      #finding length of word and displaying how many letters there are
      wordlength = len(word)
      guess = []
      for i in range(wordlength):
        guess.append("_")
        
      #assigning variable for number of wrong guesses
      wrongguessnum = 0
      
      #creating a list for all the wrong letter guesses
      incorrectletters = []
      
      #while the man is not hanged and the word is not guessed...
      while wrongguessnum < 6:
        #displaying the right frames depending on the number of wrong guesses
        if wrongguessnum == 0:
          frame = frame1
        if wrongguessnum == 1:
          frame = frame2
        if wrongguessnum == 2:
          frame = frame3
        if wrongguessnum == 3:
          frame = frame4
        if wrongguessnum == 4:
          frame = frame5
        if wrongguessnum == 5:
          frame = frame6
        if wrongguessnum == 6:
          frame = frame7

        print(frame)

        text = ""
        for i in range(wordlength):
            text += guess[i] + " "
        print(text)
        
        
        text = "["
        for i in incorrectletters:
            if i == incorrectletters[-1]:
                text += i
            else:
                text += i + " "
        print(text+ "]")
        
        #asking the user to guess a letter
        g1 = input("what is your guess?\n")
        
        #changing to lowercase
        g1 = g1.lower()

        
        
        if len(g1) == 1:
            
          if g1 in word:
            print("CORRECT")
            
            #replacing the underscore with the letter if it is in the word
            for i in range(wordlength):
              if g1 == word[i]:
                guess[i] = g1
                
            #if the word is guessed, the loop will end
            if guess == word:
              print("you win")
              print("the answer was", w)
              wins += 1
              if w == "frog":
                wins += 999
                print("frog")
                print("+1000wins")
                print("frog")
                print("frog")
              break
            
          #if the letter is not in the word, it will add it to the list of incorrect letters
          else:
            print("INCORRECT")
            if g1 in incorrectletters:
                print("you have already guessed this letter")
            elif g1 not in incorrectletters:
                incorrectletters.append(g1)
                wrongguessnum += 1
            
        #if the user tries to guess the word and is correct, the loop will end
        else:
          if g1 == w:
            print("correct\nyou win")
            print("the answer was", w)
            wins += 1
            if w == "frog":
                wins += 999
                print("frog")
                print("+1000wins")
                print("frog")
                print("frog")
            break
        
          #otherwise, the loop will continue and the number of wrong guesses goes up
          else:
            print("INCORRECT")
            wrongguessnum += 1
            
      if wrongguessnum >= 6:
        print(frame7)
        print("you lose")
        
        #displaying the correct word
        print("the answer was", w)
        losses += 1
        
      #asking the user if they want to play again
      again = str(input("play again? y/n \n").lower())
      print("wins:", wins)
      print("losses:", losses)

page = True
while page == True:
    #opening page
    hi = input("Play:\nRules:\n").lower()

    #run the function if the user selects play
    if hi == "play":
        page = False
        difficulty = input("select difficulty:\n- normal\n- countries\n- animals\n")
        if difficulty == "normal":
            #list of all words that will be used
            words = [
                "able", "about", "account", "acid", "across", "act", "addition",
                "adjustment", "advertisement", "after", "again", "against", "agreement",
                "air", "all", "almost", "among", "amount", "amusement", "and", "angle",
                "angry", "animal", "answer", "ant", "any", "apparatus", "apple",
                "approval", "arch", "argument", "arm", "army", "art", "as", "at", "attack",
                "attempt", "attention", "attraction", "authority", "automatic", "awake",
                "baby", "back", "bad", "bag", "balance", "ball", "band", "base", "basin",
                "basket", "bath", "be", "beautiful", "because", "bed", "bee", "before",
                "behaviour", "belief", "bell", "bent", "berry", "between", "bird", "birth",
                "bit", "bite", "bitter", "black", "blade", "blood", "blow", "blue",
                "board", "boat", "body", "boiling", "bone", "book", "boot", "bottle",
                "box", "boy", "brain", "brake", "branch", "brass", "bread", "breath",
                "brick", "bridge", "bright", "broken", "brother", "brown", "brush",
                "bucket", "building", "bulb", "burn", "burst", "business", "but", "butter",
                "button", "by", "cake", "camera", "canvas", "card", "care", "carriage",
                "cart", "cat", "cause", "certain", "chain", "chalk", "chance", "change",
                "cheap", "cheese", "chemical", "chest", "chief", "chin", "church",
                "circle", "clean", "clear", "clock", "cloth", "cloud", "coal", "coat",
                "cold", "collar", "colour", "comb", "come", "comfort", "committee",
                "common", "company", "comparison", "competition", "complete", "complex",
                "condition", "connection", "conscious", "control", "cook", "copper",
                "copy", "cord", "cork", "cotton", "cough", "country", "cover", "cow",
                "crack", "credit", "crime", "cruel", "crush", "cry", "cup", "cup",
                "current", "curtain", "curve", "cushion", "damage", "danger", "dark",
                "daughter", "day", "dead", "dear", "death", "debt", "decision", "deep",
                "degree", "delicate", "dependent", "design", "desire", "destruction",
                "detail", "development", "different", "digestion", "direction", "dirty",
                "discovery", "discussion", "disease", "disgust", "distance",
                "distribution", "division", "do", "dog", "door", "doubt", "down", "drain",
                "drawer", "dress", "drink", "driving", "drop", "dry", "dust", "ear",
                "early", "earth", "east", "edge", "education", "effect", "egg", "elastic",
                "electric", "end", "engine", "enough", "equal", "error", "even", "event",
                "ever", "every", "example", "exchange", "existence", "expansion",
                "experience", "expert", "eye", "face", "fact", "fall", "false", "family",
                "far", "farm", "fat", "father", "fear", "feather", "feeble", "feeling",
                "female", "fertile", "fiction", "field", "fight", "finger", "fire",
                "first", "fish", "fixed", "flag", "flame", "flat", "flight", "floor",
                "flower", "fly", "fold", "food", "foolish", "foot", "for", "force", "fork",
                "form", "forward", "fowl", "frame", "free", "frequent", "friend", "from", "frog",
                "front", "fruit", "full", "future", "garden", "general", "get", "girl",
                "give", "glass", "glove", "go", "goat", "gold", "good", "government",
                "grain", "grass", "great", "green", "grey", "grip", "group", "growth",
                "guide", "gun", "hair", "hammer", "hand", "hanging", "happy", "harbour",
                "hard", "harmony", "hat", "hate", "have", "he", "head", "healthy", "hear",
                "hearing", "heart", "heat", "help", "high", "history", "hole", "hollow",
                "hook", "hope", "horn", "horse", "hospital", "hour", "house", "how",
                "humour", "I", "ice", "idea", "if", "ill", "important", "impulse", "in",
                "increase", "industry", "ink", "insect", "instrument", "insurance",
                "interest", "invention", "iron", "island", "jelly", "jewel", "join",
                "journey", "judge", "jump", "keep", "kettle", "key", "kick", "kind",
                "kiss", "knee", "knife", "knot", "knowledge", "land", "language", "last",
                "late", "laugh", "law", "lead", "leaf", "learning", "leather", "left",
                "leg", "let", "letter", "level", "library", "lift", "light", "like",
                "limit", "line", "linen", "lip", "liquid", "list", "little", "living",
                "lock", "long", "look", "loose", "loss", "loud", "love", "low", "machine",
                "make", "male", "man", "manager", "map", "mark", "market", "married",
                "mass", "match", "material", "may", "meal", "measure", "meat", "medical",
                "meeting", "memory", "metal", "middle", "military", "milk", "mind", "mine",
                "minute", "mist", "mixed", "money", "monkey", "month", "moon", "morning",
                "mother", "motion", "mountain", "mouth", "move", "much", "muscle", "music",
                "nail", "name", "narrow", "nation", "natural", "near", "necessary", "neck",
                "need", "needle", "nerve", "net", "new", "news", "night", "no", "noise",
                "normal", "north", "nose", "not", "note", "now", "number", "nut",
                "observation", "of", "off", "offer", "office", "oil", "old", "on", "only",
                "open", "operation", "opinion", "opposite", "or", "orange", "order",
                "organization", "ornament", "other", "out", "oven", "over", "owner",
                "page", "pain", "paint", "paper", "parallel", "parcel", "part", "past",
                "paste", "payment", "peace", "pen", "pencil", "person", "physical",
                "picture", "pig", "pin", "pipe", "place", "plane", "plant", "plate",
                "play", "please", "pleasure", "plough", "pocket", "point", "poison",
                "polish", "political", "poor", "porter", "position", "possible", "pot",
                "potato", "powder", "power", "present", "price", "print", "prison",
                "private", "probable", "process", "produce", "profit", "property", "prose",
                "protest", "public", "pull", "pump", "punishment", "purpose", "push",
                "put", "quality", "question", "quick", "quiet", "quite", "rail", "rain",
                "range", "rat", "rate", "ray", "reaction", "reading", "ready", "reason",
                "receipt", "record", "red", "regret", "regular", "relation", "religion",
                "representative", "request", "respect", "responsible", "rest", "reward",
                "rhythm", "rice", "right", "ring", "river", "road", "rod", "roll", "roof",
                "room", "root", "rough", "round", "rub", "rule", "run", "sad", "safe",
                "sail", "salt", "same", "sand", "say", "scale", "school", "science",
                "scissors", "screw", "sea", "seat", "second", "secret", "secretary", "see",
                "seed", "seem", "selection", "self", "send", "sense", "separate",
                "serious", "servant", "sex", "shade", "shake", "shame", "sharp", "sheep",
                "shelf", "ship", "shirt", "shock", "shoe", "short", "shut", "side", "sign",
                "silk", "silver", "simple", "sister", "size", "skin", "skirt", "sky",
                "sleep", "slip", "slope", "slow", "small", "smash", "smell", "smile",
                "smoke", "smooth", "snake", "sneeze", "snow", "so", "soap", "society",
                "sock", "soft", "solid", "some", "son", "song", "sort", "sound", "soup",
                "south", "space", "spade", "special", "sponge", "spoon", "spring",
                "square", "stage", "stamp", "star", "start", "statement", "station",
                "steam", "steel", "stem", "step", "stick", "sticky", "stiff", "still",
                "stitch", "stocking", "stomach", "stone", "stop", "store", "story",
                "straight", "strange", "street", "stretch", "strong", "structure",
                "substance", "such", "sudden", "sugar", "suggestion", "summer", "sun",
                "support", "surprise", "sweet", "swim", "system", "table", "tail", "take",
                "talk", "tall", "taste", "tax", "teaching", "tendency", "test", "than",
                "that", "the", "then", "theory", "there", "thick", "thin", "thing", "this",
                "thought", "thread", "throat", "through", "through", "thumb", "thunder",
                "ticket", "tight", "till", "time", "tin", "tired", "to", "toe", "together",
                "tomorrow", "tongue", "tooth", "top", "touch", "town", "trade", "train",
                "transport", "tray", "tree", "trick", "trouble", "trousers", "true",
                "turn", "twist", "umbrella", "under", "unit", "up", "use", "value",
                "verse", "very", "vessel", "view", "violent", "voice", "waiting", "walk",
                "wall", "war", "warm", "wash", "waste", "watch", "water", "wave", "wax",
                "way", "weather", "week", "weight", "well", "west", "wet", "wheel", "when",
                "where", "while", "whip", "whistle", "white", "who", "why", "wide", "will",
                "wind", "window", "wine", "wing", "winter", "wire", "wise", "with",
                "woman", "wood", "wool", "word", "work", "worm", "wound", "writing",
                "wrong", "year", "yellow", "yes", "yesterday", "you", "young"
            ]


        elif difficulty == "countries":
            
            words = [
    "Afghanistan", "Albania", "Algeria", "Andorra", "Angola", "Antigua and Deps", 
    "Argentina", "Armenia", "Australia", "Austria", "Azerbaijan", "Bahamas", 
    "Bahrain", "Bangladesh", "Barbados", "Belarus", "Belgium", "Belize", "Benin", 
    "Bhutan", "Bolivia", "Bosnia Herzegovina", "Botswana", "Brazil", "Brunei", 
    "Bulgaria", "Burkina", "Burundi", "Cambodia", "Cameroon", "Canada", "Cape Verde", 
    "Central African Rep", "Chad", "Chile", "China", "Colombia", "Comoros", "Congo", 
    "Congo", "Costa Rica", "Croatia", "Cuba", "Cyprus", "Czech Republic", 
    "Denmark", "Djibouti", "Dominica", "Dominican Republic", "East Timor", "Ecuador", 
    "Egypt", "El Salvador", "Equatorial Guinea", "Eritrea", "Estonia", "Ethiopia", "Fiji", 
    "Finland", "France", "Gabon", "Gambia", "Georgia", "Germany", "Ghana", "Greece", 
    "Grenada", "Guatemala", "Guinea", "Guinea-Bissau", "Guyana", "Haiti", "Honduras", 
    "Hungary", "Iceland", "India", "Indonesia", "Iran", "Iraq", "Ireland", 
    "Israel", "Italy", "Ivory Coast", "Jamaica", "Japan", "Jordan", "Kazakhstan", "Kenya", 
    "Kiribati", "Korea North", "Korea South", "Kosovo", "Kuwait", "Kyrgyzstan", "Laos", 
    "Latvia", "Lebanon", "Lesotho", "Liberia", "Libya", "Liechtenstein", "Lithuania", 
    "Luxembourg", "Macedonia", "Madagascar", "Malawi", "Malaysia", "Maldives", "Mali", 
    "Malta", "Marshall Islands", "Mauritania", "Mauritius", "Mexico", "Micronesia", "Moldova", 
    "Monaco", "Mongolia", "Montenegro", "Morocco", "Mozambique", "Myanmar", "Namibia", 
    "Nauru", "Nepal", "Netherlands", "New Zealand", "Nicaragua", "Niger", "Nigeria", "Norway", 
    "Oman", "Pakistan", "Palau", "Panama", "Papua New Guinea", "Paraguay", "Peru", "Philippines", 
    "Poland", "Portugal", "Qatar", "Romania", "Russian Federation", "Rwanda", "St Kitts and Nevis", 
    "St Lucia", "Saint Vincent and the Grenadines", "Samoa", "San Marino", "Sao Tome and Principe", 
    "Saudi Arabia", "Senegal", "Serbia", "Seychelles", "Sierra Leone", "Singapore", "Slovakia", 
    "Slovenia", "Solomon Islands", "Somalia", "South Africa", "South Sudan", "Spain", "Sri Lanka", 
    "Sudan", "Suriname", "Swaziland", "Sweden", "Switzerland", "Syria", "Taiwan", "Tajikistan", 
    "Tanzania", "Thailand", "Togo", "Tonga", "Trinidad and Tobago", "Tunisia", "Turkey", "Turkmenistan", 
    "Tuvalu", "Uganda", "Ukraine", "United Arab Emirates", "United Kingdom", "United States", 
    "Uruguay", "Uzbekistan", "Vanuatu", "Vatican City", "Venezuela", "Vietnam", "Yemen", "Zambia", 
    "Zimbabwe"
]
            print("if the country has a space in it, you will have to guess a space (same with '-')")
        elif difficulty == "animals":

            words = [
    "Canidae", "Felidae", "Cat", "Cattle", "Dog", "Donkey", "Goat", "Horse", "Pig", "Rabbit",
    "Aardvark", "Aardwolf", "Albatross", "Alligator", "Alpaca", "Amphibian", "Anaconda",
    "Angelfish", "Anglerfish", "Ant", "Anteater", "Antelope", "Antlion", "Ape", "Aphid",
    "Armadillo", "Asp", "Baboon", "Badger", "Bandicoot", "Barnacle", "Barracuda", "Basilisk",
    "Bass", "Bat", "Bear", "Beaver", "Bedbug", "Bee", "Beetle", "Bird", "Bison", "Blackbird",
    "Boa", "Boar", "Bobcat", "Bobolink", "Bonobo", "Bovid", "Bug", "Butterfly", "Buzzard",
    "Camel", "Canid", "Capybara", "Cardinal", "Caribou", "Carp", "Cat", "Catshark",
    "Caterpillar", "Catfish", "Cattle", "Centipede", "Cephalopod", "Chameleon", "Cheetah",
    "Chickadee", "Chicken", "Chimpanzee", "Chinchilla", "Chipmunk", "Clam", "Clownfish",
    "Cobra", "Cockroach", "Cod", "Condor", "Constrictor", "Coral", "Cougar", "Cow", "Coyote",
    "Crab", "Crane", "Crawdad", "Crayfish", "Cricket", "Crocodile", "Crow", "Cuckoo", "Cicada",
    "Damselfly", "Deer", "Dingo", "Dinosaur", "Dog", "Dolphin", "Donkey", "Dormouse", "Dove",
    "Dragonfly", "Dragon", "Duck", "Eagle", "Earthworm", "Earwig", "Echidna", "Eel", "Egret",
    "Elephant", "Elk", "Emu", "Ermine", "Falcon", "Ferret", "Finch", "Firefly", "Fish",
    "Flamingo", "Flea", "Fly", "Flyingfish", "Fowl", "Fox", "Frog", "Gamefowl", "Galliform",
    "Gazelle", "Gecko", "Gerbil", "Gibbon", "Giraffe", "Goat", "Goldfish", "Goose", "Gopher",
    "Gorilla", "Grasshopper", "Grouse", "Guan", "Guanaco", "Guineafowl", "Gull", "Guppy",
    "Haddock", "Halibut", "Hamster", "Hare", "Harrier", "Hawk", "Hedgehog", "Heron", "Herring",
    "Hippopotamus", "Hookworm", "Hornet", "Horse", "Hoverfly", "Hummingbird", "Hyena", "Iguana",
    "Impala", "Jackal", "Jaguar", "Jay", "Jellyfish", "Junglefowl", "Kangaroo", "Kingfisher",
    "Kite", "Kiwi", "Koala", "Koi", "Krill", "Ladybug", "Lamprey", "Landfowl", "Lark", "Leech",
    "Lemming", "Lemur", "Leopard", "Leopon", "Limpet", "Lion", "Lizard", "Llama", "Lobster",
    "Locust", "Loon", "Louse", "Lungfish", "Lynx", "Macaw", "Mackerel", "Magpie", "Mammal",
    "Manatee", "Mandrill", "Marlin", "Marmoset", "Marmot", "Marsupial", "Marten", "Mastodon",
    "Meadowlark", "Meerkat", "Mink", "Minnow", "Mite", "Mockingbird", "Mole", "Mollusk",
    "Mongoose", "Monkey", "Moose", "Mosquito", "Moth", "Mouse", "Mule", "Muskox", "Narwhal",
    "Newt", "Nightingale", "Ocelot", "Octopus", "Opossum", "Orangutan", "Orca", "Ostrich",
    "Otter", "Owl", "Ox", "Panda", "Panther", "Parakeet", "Parrot", "Parrotfish", "Partridge",
    "Peacock", "Peafowl", "Pelican", "Penguin", "Perch", "Pheasant", "Pig", "Pigeon", "Pike",
    "Pinniped", "Piranha", "Planarian", "Platypus", "Pony", "Porcupine", "Porpoise", "Possum",
    "Prawn", "Primate", "Ptarmigan", "Puffin", "Puma", "Python", "Quail", "Quelea", "Quokka",
    "Rabbit", "Raccoon", "Rat", "Rattlesnake", "Raven", "Reindeer", "Reptile", "Rhinoceros",
    "Roadrunner", "Rodent", "Rook", "Rooster", "Roundworm", "Sailfish", "Salamander", "Salmon",
    "Sawfish", "Scallop", "Scorpion", "Seahorse", "Shark", "Sheep", "Shrew", "Shrimp",
    "Silkworm", "Silverfish", "Skink", "Skunk", "Sloth", "Slug", "Smelt", "Snail", "Snake",
    "Snipe", "Sole", "Sparrow", "Spider", "Spoonbill", "Squid", "Squirrel", "Starfish",
    "Stingray", "Stoat", "Stork", "Sturgeon", "Swallow", "Swan", "Swift", "Swordfish",
    "Swordtail", "Tahr", "Takin", "Tapir", "Tarantula", "Tarsier", "Termite", "Tern", "Thrush",
    "Tick", "Tiger", "Tiglon", "Toad", "Tortoise", "Toucan", "Trout", "Tuna", "Turkey",
    "Turtle", "Tyrannosaurus", "Urial", "Vicuna", "Viper", "Vole", "Vulture", "Wallaby",
    "Walrus", "Wasp", "Warbler", "Weasel", "Whale", "Whippet", "Whitefish", "Wildcat",
    "Wildebeest", "Wildfowl", "Wolf", "Wolverine", "Wombat", "Woodpecker", "Worm", "Wren",
    "Xerinae", "Yak", "Zebra", "Alpaca", "Cat", "Cattle", "Chicken", "Dog", "Donkey", "Ferret",
    "Gayal", "Goldfish", "Guppy", "Horse", "Koi", "Llama", "Sheep", "Yak"
]
        hangman()

    #display the rules if the user selects rules
    if hi == "rules":
        print("hangman:\nThe computer will think of a word which you will try to guess.\nThe length of the word is displayed by the underscores below an image of a man hanging.\nYou can either guess a letter or a word. If you are correct it will appear in the list, and if not, it will appear below in a list of incorrect guesses.\nEach incorrect guess will add a body part to the image and once a full man has appeared, you have lost.\nYour score will be displayed at the end of each round where you will be given an option to play again or quit.")










